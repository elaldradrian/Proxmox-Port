diff --git a/www/manager6/Utils.js b/www/manager6/Utils.js
index db86fa9a3..5f60b0ae2 100644
--- a/www/manager6/Utils.js
+++ b/www/manager6/Utils.js
@@ -522,19 +512,11 @@ Ext.define('PVE.Utils', {
 
     render_scsihw: function(value) {
 	if (!value || value === '__default__') {
-	    return Proxmox.Utils.defaultText + ' (LSI 53C895A)';
-	} else if (value === 'lsi') {
-	    return 'LSI 53C895A';
-	} else if (value === 'lsi53c810') {
-	    return 'LSI 53C810';
-	} else if (value === 'megasas') {
-	    return 'MegaRAID SAS 8708EM2';
+	    return Proxmox.Utils.defaultText + '(VirtIO SCSI)';
 	} else if (value === 'virtio-scsi-pci') {
 	    return 'VirtIO SCSI';
 	} else if (value === 'virtio-scsi-single') {
 	    return 'VirtIO SCSI single';
-	} else if (value === 'pvscsi') {
-	    return 'VMware PVSCSI';
 	} else {
 	    return value;
 	}
diff --git a/www/manager6/form/ScsiHwSelector.js b/www/manager6/form/ScsiHwSelector.js
index fd23158be..4c3c80825 100644
--- a/www/manager6/form/ScsiHwSelector.js
+++ b/www/manager6/form/ScsiHwSelector.js
@@ -3,11 +3,7 @@ Ext.define('PVE.form.ScsiHwSelector', {
     alias: ['widget.pveScsiHwSelector'],
     comboItems: [
 	['__default__', PVE.Utils.render_scsihw('')],
-	['lsi', PVE.Utils.render_scsihw('lsi')],
-	['lsi53c810', PVE.Utils.render_scsihw('lsi53c810')],
-	['megasas', PVE.Utils.render_scsihw('megasas')],
 	['virtio-scsi-pci', PVE.Utils.render_scsihw('virtio-scsi-pci')],
 	['virtio-scsi-single', PVE.Utils.render_scsihw('virtio-scsi-single')],
-	['pvscsi', PVE.Utils.render_scsihw('pvscsi')],
     ],
 });
diff --git a/www/manager6/form/VMCPUFlagSelector.js b/www/manager6/form/VMCPUFlagSelector.js
index ace3c531f..1e185b7c5 100644
--- a/www/manager6/form/VMCPUFlagSelector.js
+++ b/www/manager6/form/VMCPUFlagSelector.js
@@ -21,17 +21,6 @@ Ext.define('PVE.form.VMCPUFlagSelector', {
 	fields: ['flag', { name: 'state', defaultValue: '=' }, 'desc'],
 	data: [
 	    // FIXME: let qemu-server host this and autogenerate or get from API call??
-	    { flag: 'md-clear', desc: 'Required to let the guest OS know if MDS is mitigated correctly' },
-	    { flag: 'pcid', desc: 'Meltdown fix cost reduction on Westmere, Sandy-, and IvyBridge Intel CPUs' },
-	    { flag: 'spec-ctrl', desc: 'Allows improved Spectre mitigation with Intel CPUs' },
-	    { flag: 'ssbd', desc: 'Protection for "Speculative Store Bypass" for Intel models' },
-	    { flag: 'ibpb', desc: 'Allows improved Spectre mitigation with AMD CPUs' },
-	    { flag: 'virt-ssbd', desc: 'Basis for "Speculative Store Bypass" protection for AMD models' },
-	    { flag: 'amd-ssbd', desc: 'Improves Spectre mitigation performance with AMD CPUs, best used with "virt-ssbd"' },
-	    { flag: 'amd-no-ssb', desc: 'Notifies guest OS that host is not vulnerable for Spectre on AMD CPUs' },
-	    { flag: 'pdpe1gb', desc: 'Allow guest OS to use 1GB size pages, if host HW supports it' },
-	    { flag: 'hv-tlbflush', desc: 'Improve performance in overcommitted Windows guests. May lead to guest bluescreens on old CPUs.' },
-	    { flag: 'hv-evmcs', desc: 'Improve performance for nested virtualization. Only supported on Intel CPUs.' },
 	    { flag: 'aes', desc: 'Activate AES instruction set for HW acceleration.' },
 	],
 	listeners: {
diff --git a/www/manager6/node/StatusView.js b/www/manager6/node/StatusView.js
index 0ac200c75..c29f433f4 100644
--- a/www/manager6/node/StatusView.js
+++ b/www/manager6/node/StatusView.js
@@ -109,7 +109,13 @@ Ext.define('PVE.node.StatusView', {
 		    return data.kversion;
 		}
 		let kernel = data['current-kernel'];
-		let buildDate = kernel.version.match(/\((.+)\)\s*$/)?.[1] ?? 'unknown';
+		let buildDate;
+		try {
+		    buildDate = kernel.version.match(/\((.+)\)\s*$/)[1] ?? 'unknown';
+		} catch {
+		    // Patch for some kernels not match (date).
+		    buildDate = kernel.version ?? 'unknown';
+		}
 		return `${kernel.sysname} ${kernel.release} (${buildDate})`;
 	    },
 	    value: '',
@@ -121,7 +127,7 @@ Ext.define('PVE.node.StatusView', {
 	    textField: 'boot-info',
 	    renderer: boot => {
 		if (boot.mode === 'legacy-bios') {
-		    return 'Legacy BIOS';
+		    return 'U-BOOT';
 		} else if (boot.mode === 'efi') {
 		    return `EFI${boot.secureboot ? ' (Secure Boot)' : ''}`;
 		}
