From e844f6462955d7416300c1a02e9227339b7293b8 Mon Sep 17 00:00:00 2001
From: jiangcuo <jiangcuo@bingsin.com>
Date: Fri, 17 Nov 2023 09:10:39 +0000
Subject: [PATCH] init for riscv64

---
 data/src/Makefile   | 2 +-
 data/src/database.c | 2 +-
 data/src/dcdb.c     | 2 +-
 data/src/dfsm.c     | 4 ++--
 data/src/logger.c   | 2 +-
 data/src/memdb.c    | 6 +++---
 data/src/status.c   | 8 ++++----
 debian/changelog    | 6 ++++++
 8 files changed, 19 insertions(+), 13 deletions(-)

diff --git a/data/src/Makefile b/data/src/Makefile
index 3d39201..976cbba 100644
--- a/data/src/Makefile
+++ b/data/src/Makefile
@@ -3,7 +3,7 @@ DEPENDENCIES=libcpg libcmap libquorum libqb glib-2.0 fuse sqlite3 librrd
 
 CC = gcc
 CFLAGS += -std=gnu99
-CFLAGS += -Wall -Werror -Wno-unknown-pragmas -Wno-strict-aliasing
+CFLAGS += -Wall -Werror -Wno-unknown-pragmas -Wno-strict-aliasing -Wno-unused-result
 CFLAGS += -Wpedantic
 CFLAGS += -g -O2 -Wl,-z,relro
 CFLAGS += -I.
diff --git a/data/src/database.c b/data/src/database.c
index 80e0b60..9abcea0 100644
--- a/data/src/database.c
+++ b/data/src/database.c
@@ -356,7 +356,7 @@ static gboolean bdb_backend_load_index(
 		
 		if (te->type == DT_REG) {
 			if (size > 0)
-				te->data.value = g_memdup(value, size);
+				te->data.value = g_memdup2(value, size);
 		} else if (te->type == DT_DIR) {
 			if (size) {
 				cfs_critical("directory inode contains data (inode = %016" PRIX64 ")",
diff --git a/data/src/dcdb.c b/data/src/dcdb.c
index b690355..4194ce8 100644
--- a/data/src/dcdb.c
+++ b/data/src/dcdb.c
@@ -347,7 +347,7 @@ dcdb_parse_update_inode(
 	te->type = type;
 
 	if (te->type == DT_REG && te->size) {
-		te->data.value = g_memdup(data, te->size);
+		te->data.value = g_memdup2(data, te->size);
 		if (!te->data.value) {
 			memdb_tree_entry_free(te);
 			return NULL;
diff --git a/data/src/dfsm.c b/data/src/dfsm.c
index ddfcc23..84f7df7 100644
--- a/data/src/dfsm.c
+++ b/data/src/dfsm.c
@@ -460,7 +460,7 @@ dfsm_queue_add_message(
 		
 	qm->nodeid = nodeid;
 	qm->pid = pid;
-	qm->msg = g_memdup (msg, msg_len);
+	qm->msg = g_memdup2 (msg, msg_len);
 	qm->msg_len = msg_len;
 	qm->msg_count =  msg_count;
 
@@ -877,7 +877,7 @@ dfsm_cpg_deliver_callback(
 				goto leave;
 			}
 
-			ni->state = g_memdup(msg, msg_len);
+			ni->state = g_memdup2(msg, msg_len);
 			ni->state_len = msg_len;
 
 			int received_all = 1;
diff --git a/data/src/logger.c b/data/src/logger.c
index 4cf9cce..38feb06 100644
--- a/data/src/logger.c
+++ b/data/src/logger.c
@@ -589,7 +589,7 @@ clusterlog_get_state(
 	}
 
 	*res_len = clog_size(cl->base);
-	gpointer msg = g_memdup(cl->base, *res_len);
+	gpointer msg = g_memdup2(cl->base, *res_len);
 
 	g_mutex_unlock(&cl->mutex);
 
diff --git a/data/src/memdb.c b/data/src/memdb.c
index 7ec7e0b..4a4ce89 100644
--- a/data/src/memdb.c
+++ b/data/src/memdb.c
@@ -73,7 +73,7 @@ memdb_tree_entry_copy(
 	cpy->size = te->size;
 
 	if (with_data && te->size && te->type == DT_REG) {
-		cpy->data.value = g_memdup(te->data.value, te->size);
+		cpy->data.value = g_memdup2(te->data.value, te->size);
 	} else { 
 		cpy->data.value = NULL;
 	}
@@ -676,7 +676,7 @@ memdb_read_nolock(
 
 	if ((te = memdb_lookup_path(memdb, path, &parent))) {
 		if (te->type == DT_REG) {
-			*data_ret = g_memdup(te->data.value, te->size);
+			*data_ret = g_memdup2(te->data.value, te->size);
 			guint32 size = te->size;
 			return size;
 		}
@@ -1451,7 +1451,7 @@ memdb_index_copy(memdb_index_t *idx)
 		return NULL;
 	}
 
- 	memdb_index_t *copy = (memdb_index_t *)g_memdup(idx, bytes);
+ 	memdb_index_t *copy = (memdb_index_t *)g_memdup2(idx, bytes);
 
 	return copy;
 }
diff --git a/data/src/status.c b/data/src/status.c
index ff0b1e9..0b17cfa 100644
--- a/data/src/status.c
+++ b/data/src/status.c
@@ -1008,14 +1008,14 @@ kventry_hash_set(
 		g_hash_table_remove(kvhash, key);
 	} else if ((entry = (kventry_t *)g_hash_table_lookup(kvhash, key))) {
 		g_free(entry->data);
-		entry->data = g_memdup(data, len);
+		entry->data = g_memdup2(data, len);
 		entry->len = len;
 		entry->version++;
 	} else {
 		kventry_t *entry = g_new0(kventry_t, 1);
 
 		entry->key = g_strdup(key);
-		entry->data = g_memdup(data, len);
+		entry->data = g_memdup2(data, len);
 		entry->len = len;
 
 		g_hash_table_replace(kvhash, entry->key, entry);
@@ -1372,14 +1372,14 @@ rrdentry_hash_set(
 	rrdentry_t *entry;
 	if ((entry = (rrdentry_t *)g_hash_table_lookup(rrdhash, key))) {
 		g_free(entry->data);
-		entry->data = g_memdup(data, len);
+		entry->data = g_memdup2(data, len);
 		entry->len = len;
 		entry->time = time(NULL);
 	} else {
 		rrdentry_t *entry = g_new0(rrdentry_t, 1);
 
 		entry->key = g_strdup(key);
-		entry->data = g_memdup(data, len);
+		entry->data = g_memdup2(data, len);
 		entry->len = len;
 		entry->time = time(NULL);
 
